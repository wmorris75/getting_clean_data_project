(as.numeric(nonOecd$rank))
mean(as.numeric(nonOecd$rank))
mean(as.numeric(only_Oecd$rank))
only_oecd
only_oecd
mean(as.numeric(only_Oecd$rank))
only_Oecd
nonOecd
mean(as.numeric(only_Oecd$rank))
mean(nonOecd[["rank"]])
mean(as.numeric(nonOecd[["rank"]]))
mean(as.numeric(only_Oecd[["rank"]]))
mean(as.numeric(only_Oecd[["dollars"]]))
mean(as.numeric(nonOecd[["dollars"]]))
country
country<-read.csv('country.csv')
country
oecd<-which(as.character(country$Income.Group) == "High income: nonOECD" | as.character(country$Income.Group) == "High income: OECD")
country[oecd]
country[oecd,]
relData
keeps
country[keeps]
clean<-country[keeps]
fclean<-clean[which(clean$Income.Group=="High income: nonOECD" || clean$Income.Group == "High income: OECD")]
fclean
fclean<-clean[which(clean$Income.Group=="High income: nonOECD" || clean$Income.Group == "High income: OECD"),]
fclean
nrow(fclean)
clean
class(clean)
nrow(clean)
fclean<-clean[which(clean$Income.Group=="High income: nonOECD" | clean$Income.Group == "High income: OECD"),]
nrow(fclean)
fclean
mergeData<-(cdata, fclean, by.x="code", by.y="CountryCode", all=TRUE)
mergeData<-merge(cdata, fclean, by.x="code", by.y="CountryCode", all=TRUE)
mergeData
mergeData<-merge(cdata, fclean, by.x="code", by.y="CountryCode", all=FALSE)
mergeData
mean(as.numeric(mergeData[rank]$rank))
o<-as.numeric(mergeData[which(mergeData$Income.Group == "High income: nonOECD")])
o<-as.numeric(mergeData[which(mergeData$Income.Group == "High income: nonOECD")],)
o<-as.numeric(mergeData[which(mergeData$Income.Group == "High income: nonOECD"),])
o<-mergeData[which(mergeData$Income.Group == "High income: nonOECD"),]
o
mean(as.numeric(o$rank))
o<-mergeData[which(mergeData$Income.Group == "High income: OECD"),]
mean(as.numeric(o$rank))
merged.data <- merge(country, gdp,
by.x = "CountryCode",
by.y = "X")
merged.data
names(merge.data)
names(merge)
data <- merge(country, gdp,
by.x = "CountryCode",
by.y = "X")
names(data)
class(data)
oecd<-data[which(data$Incom.Group == "High income: OECD"),]
oecd
oecd$rank
oecd$X
oecd$X.1
oecd<-data[which(data$Income.Group == "High income: OECD"),]
oecd$X.1
oecd$X
oecd[1]
oecd[35]
oecd[33]
oecd[34]
oecd[32]
mean(as.numeric(oecd[32]))
mean(as.numeric(oecd[[32]]))
oecd<-data[which(data$Income.Group == "High income: nonOECD"),]
mean(as.numeric(oecd[[32]]))
oecd<-data[which(data$Income.Group == "High income: nonOECD"),]
mean(as.numeric(oecd[[32]]))
oecd
names(oecd)
oecd[31]
oecd[32]
as.numeric(oecd[[32]])
mean(as.numeric(oecd[[32]]))
data[oecd[32]]
data[oecd[32],]
data[oecd,]
data[oecd$rank,]
data[oecd[[32]],]
oecd[oecd[[32]]]
oecd[oecd[32]]
oecd$Gross.domestic.product.2012
k<-oecd$Gross.domestic.product.2012
oecd[k]
oecd[k,]
get<-c("Gross.domestic.product.2012", "Income.Group")
oecd[get,]
oecd[get]
r<-oecd[get]
r[!complete.cases(r)]
r[!complete.case(r)]
bad->complete.cases(r)
bad<-complete.cases(r)
bad
r[!bad]
r[!bad,]
mean(as.numeric(r[["Gross.domestic.product.2012"]]))
r[1]
bad
quantile(cdata$rank, probs=c(0.2, 0.4, 0,6, 0.8, 1))
cdata
class(cdata)
quantile(gdp$X, probs=c(0.2, 0.4, 0,6, 0.8, 1))
quantile(cdata, probs=c(0.2, 0.4, 0,6, 0.8, 1))
quantile(cdata$rank, probs=c(0.2, 0.4, 0,6, 0.8))
quantile(cdata$rank)
quantile(cdata$rank, probs=c(0.2, 0.4, 0,6, 0.8), na.rm=TRUE)
quantile(cdata$rank, probs=c(0.2, 0.4, 0,6, 0.8), na.rm=FALSE)
quantile(as.numeric(cdata$rank), probs=c(0.2, 0.4, 0,6, 0.8))
quantile(as.numeric(cdata$rank), probs=c(0.2, 0.4, 0,6, 0.8, 1))
quantile(as.numeric(cdata$rank), probs=c(0.2, 0.4, 0,))
quantile(as.numeric(cdata$rank), probs=c(0.2, 0.4, 0,), na.rm=TRUE)
quantile(as.numeric(cdata$rank), probs=c(0.2, 0.4, 0.6), na.rm=TRUE)
quantile(as.numeric(cdata$rank), probs=c(0.2, 0.4, 0.6, 0.8), na.rm=TRUE)
quantile(as.numeric(cdata$rank), probs=c(0.2, 0.4, 0.6, 0.8, 1), na.rm=TRUE)
quantile(as.numeric(cdata$rank), probs=c(0.2, 0.4, 0.6, 0.8, 1), na.rm=TRUE)
quant<-quantile(as.numeric(cdata$rank), probs=c(0.2, 0.4, 0.6, 0.8, 1), na.rm=TRUE)
table(cdata$rank, country$Income.Group)
names(data)
table(data$Gross.domestic.product.2012, data$Income.Group)
j<-table(data$Gross.domestic.product.2012, data$Income.Group)
class(j)
names(j)
as.data.frame(j)
names(as.data.frame(j))
names(data)
j<-table(data$Gross.domestic.product.2012, data$Income.Group, data$CountryCode)
j
head(j)
summary(j)
oecd<-data[which(data$Income.Group == "Lower middle income"),]
cdata
m<-merge(cdata, oecd, by.x='code', by.y='CountryCode')
m
m<-merge(cdata, oecd, by.x='code', by.y='CountryCode', all = FALSE)
m
m<-merge(cdata, oecd, by.x='code', by.y='CountryCode', all = FALSE)
g<-keep("rank", "Income.Group")
g<-c("rank", "Income.Group")
m[g]
quantile(as.numeric(cdata$rank), probs=c(0.2, 0.4, 0.6, 0.8, 1), na.rm=TRUE)
m[g]
r<-m[g]
r[which(r$rank<39.8)]
r[which(r$rank<39.8),]
r
r[which(r$rank<40),]
r$rank
r[which(as.numeric(r$rank)<40),]
nrow(r[which(as.numeric(r$rank)<40),])
nrow(r[which(as.numeric(r$rank)<38),])
(r[which(as.numeric(r$rank)<38),])
which(as.numeric(r$rank)<38),])
which(as.numeric(r$rank)<38))
which(as.numeric(r$rank)<38)
r
g<-r[as.numeric(r$rank),]
g
g$rank
as.numeric(r$rank)
rank<-as.numeric(r$rank)
which(rank < 38)
length(which(rank<38))
length(which(rank==38))
length(which(rank==35))
r
r[["rank"]]
class(r[[r"rank"]][1])
r[["rank"]][1]
class(r[["rank"]][1])
rank<-as.character(r$rank)
length(which(rank=="35"))
length(which(rank=="32"))
rank
length(which(rank=="60"))
length(which(rank=="31"))
which(rank=="31"))\
which(rank=="31")
rank[[43]]
rk<-as.character(r$rank)
which(rk=="31")
r
r[1]
r$rank
which(r$rank == 31)
r$rank[1]
r[["rank"]][2]
r
r[1]
r$rank
r[2]
r$Income.Group
oecd
mergeData
which(mergeData$rank == 161)
mergeData(which(mergeData$rank == 161))
mergeData[(which(mergeData$rank == 161)]
mergeData[(which(mergeData$rank == 161),]
mergeData[(which(mergeData$rank == 161),]
mergeData[(which(mergeData$rank == 161)]
mergeData[which(mergeData$rank==161)]
mergeData[which(mergeData$rank==161),]
mergeData[which(mergeData$rank<38),]
mergeData[which(as.numeric(mergeData$rank)<38),]
j<-mergeData[which(as.numeric(mergeData$rank)<38),]
mean(as.numeric(j$rank))
mergeData[which(mergeData$Income.Group=="High Income:OECD"),]
mergeData[which(as.character(mergeData$Income.Group)=="High Income:OECD"),]
mergeData[which(as.character(mergeData$Income.Group)=="High Income: OECD"),]
(mergeData$Income.Group)
mergeData[which(as.character(mergeData$Income.Group)=="High income: OECD"),]
t<-mergeData[which(as.character(mergeData$Income.Group)=="High income: OECD"),]
mean(as.numeric(t$rank))
which(t$rank == 51)
t[6,]
t
nrow(t)
t<-mergeData[which(as.character(mergeData$Income.Group)=="High income: nonOECD"),]
t
nrow(t)
mean(t$rank)
t
mean(as.numeric(t$rank))
t<-mergeData[which(as.character(mergeData$Income.Group)=="High income: OECD"),]
mean(as.numeric(t$rank))
t$rank
t$rank[t$rank]
mean(t$rank[t$rank])
t$rank
t$rank[1]
colMeans(t$rank)
colMeans(t)
colMean(t)
colMeans(t)
colMeans(as.numeric(t)
)
colMeans(as.numeric(t$rank))
colMeans(as.numeric(t$rank[1]))
t[1]
t[2]
mean(t[,2])
as.numeric(t[2])
as.numeric(t[,2])
j<-as.numeric(t[,2])
mean(j)
t[2]
t[[25]]
j<-as.numeric(t[2,])
j
mean(j)
j<-as.numeric(t[2])
t
j
split(t, t$rank)
t
mean(t$rank)
mean(as.numeric(t$rank))
which(t$rank)
which(t$rank>2)
which(as.numeric(t$rank>2))
which(as.numeric(t$rank)>2)
which(as.numeric(t$rank)==38)
which(as.numeric(t$rank)==29)
t$rank
j<-t$rank
j[1]
t
tail(t)
j<-t$rank %>%
;
t
j<- t %<%
''
j<- t %>%
;
droplevels()
droplevels(t)
j<-t$rank
mean(j)
mean(as.numeric(j))
droplevels(t$rank)
j<-droplevels(t$rank)
mean(as.numeric(j))
mean(as.numeric(t$rank))
t$tank
t$rank
gdp
gdp<-read.csv("gdp.csv")
country<-read.csv("country.csv")
gdp
names(gdp)
wants<-c("X",  "Gross.domestic.product.2012" "X.1" )
wants<-c("X",  "Gross.domestic.product.2012", "X.1" )
gdp[wants,]
gdp[wants]
gdp[wants][1]
gdp[wants][[1]2]
gdp[[X]]
gdp$X
mergeC<-merge(gdp, country, by.x="X", by.y = "CountryCode")
mergeC
mergeC[1]
names(mergeC)
keeps<-c("X",  "Gross.domestic.product.2012" "X.1" )
keeps<-c("X",  "Gross.domestic.product.2012", "X.1" )
mergeC[keeps]
relData<-mergeC[keeps]
relData<-as.character(relData)
relData
relData<-mergeC[keeps]
relData[3]
jData<-relData[as.character(relData$Gross.domestic.product.2012)]
jData<-relData[as.character(relData$Gross.domestic.product.2012),]
jData
jData[!complete.cases(jData)]
jData[!complete.cases(jData),]
sort(relData)
relData[sort(data$rank, decreasing=decreasing)]
relData[sort(data$rank, decreasing=decreasing),]
relData[sort(data$Gross.domestic.product.2012, decreasing=decreasing),]
relData[sort(data$Gross.domestic.product.2012, decreasing=TRUE),]
gdp<-read.csv('gdp.csv', header=T, na.string=c("", "NA"))
keeps<-c("Gross.domestic.product.2012", 'X', 'X.2', 'X.3')
gdata<-gdp[,keeps]
cdata<-gdata[complete.cases(gdata),]
names(cdata)<-c("rank", "code", 'country', 'dollars')
gsort<-cdata[sort(cdata$rank, decreasing=FALSE),]
gsort
gsort<-cdata[sort(cdata$rank, decreasing=TRUE),]
gsort
gdp<-read.csv('gdp.csv', header=T, na.string=c("", "NA"))
gdp
gdp[!complete.cases(gdp)]
gdp[!complete.cases(gdp),]
k<-gdp[!complete.cases(gdp),]
names(k)
k[['X']]
k[['X']][1]
class(k[['X']][1])
gdp
gdp<-read.csv('gdp.csv', colClasses = "character", na.string=c("", "NA"))
gdp
names(gdp)
gdp$X
gdp[!complete.cases(gdp),]
names(gdp)
keeps<-c("X", "Gross.domestic.product.2012")
gdp[keeps]
gdp[,keeps]
keeps<-c("X", "Gross.domestic.product.2012")
gdp[keeps,]
reData<-gdp[keeps]
reData[!complete.cases(reData)]
reData[!complete.cases(reData),]
reData[sort(as.numeric(reData$Gross.domestic.product.2012)),]
reData[sort(as.numeric(reData$Gross.domestic.product.2012), decreasing=TRUE),]
goodData<-reData[sort(as.numeric(reData$Gross.domestic.product.2012), decreasing=TRUE),]
mergeSort<-merge(goodData, country, by.x="X", by.y="CountryCode")
mergeSort<-merge(goodData, country, by.x="X", by.y="CountryCode")
mergeSort
nrow(mergeSort)
keeps<-c("X", "Gross.domestic.product.2012")
gdp[keeps,]
gdp[keeps]
nrow(gdp[keeps])
d<-gdp[which(as.charactergdp$Gross.domestic.product.2012) == "NA"),]
d<-gdp[which(as.charactergdp$Gross.domestic.product.2012) == "NA")),]
d<-gdp[which(as.character(gdp$Gross.domestic.product.2012) == "NA")),]
d<-gdp[which(as.character(gdp$Gross.domestic.product.2012) == "NA"),]
d
d<-gdp[which(as.character(gdp$Gross.domestic.product.2012) == "NA")]
d
d<-gdp[which(as.character(gdp$Gross.domestic.product.2012) == <NA>)]
d<-gdp[which(as.character(gdp$Gross.domestic.product.2012) == "<NA>")]
d
d <- data.frame(lapply(d, as.character), stringsAsFactors=FALSE)
d
d <- data.frame(lapply(gdp, as.character), stringsAsFactors=FALSE)
d
d[!complete.cases(d)]
d[!complete.cases(d),]
j<-gdp[keeps,]
bobc <- rapply(j, as.character, classes="factor", how="replace")
bobc
d
names(d)
keeps
d[keeps]
goodData<-d[keeps]
goodData[which(as.numeric(goodData$Gross.domestic.product.2012)>0),]
perfect<-goodData[which(as.numeric(goodData$Gross.domestic.product.2012)>0),]
perfect
perfectSort<-perfect[sort(perfect$Gross.domestic.product.2012, decreasing=TRUE),]
perfectSort
perfectSort
perfect
perfectSort<-perfect[sort(perfect$Gross.domestic.product.2012, decreasing=FALSE),]
perfectSort
perfectSort<-perfect[sort(perfect$Gross.domestic.product.2012),]
perfectSort
perfect<-goodData[which(as.character(goodData$X)=="NA"),]
perfect
perfect<-goodData[which(as.character(goodData$X)=="NA")]
perfect
perfect<-goodData[which(as.character(goodData$X)=="<NA>")]
perfect
perfect<-goodData[which(as.character(goodData$X)=="<NA>"),]
perfect
goodData[which(as.numeric(goodData$Gross.domestic.product.2012)>0),]
perfect
perfect<-goodData[which(as.numeric(goodData$Gross.domestic.product.2012)>0),]
as.character(perfect$Gross.domestic.product.2012)
as.character(perfect$X)
perfectSort<-perfect[sort(as.numeric(perfect$Gross.domestic.product.2012), decreasing=TRUE),]
perfectSort
merg<-merge(perfectSort, country, by.x="X", by.y = "CountryCode")
merg
cou<-c('CountryCode')
country[cou]
ocountry<-country[cou]
merg<-merge(perfectSort, ocountry, by.x="X", by.y = "CountryCode")
merg
merg[sort(as.numeric(merg$Gross.domestic.product.2012), decreasing=TRUE),]
merg$Gross.domestic.product.2012
sort(as.numeric(merg$Gross.domestic.product.2012))
s<-sort(as.numeric(merg$Gross.domestic.product.2012))
merg[s]
merg[s,]
s<-order(as.numeric(merg$Gross.domestic.product.2012))
merg[s,]
s<-order(as.numeric(merg$Gross.domestic.product.2012), decreasing=TRUE)
merg[s,]
j<-merg[s,]
j
j[which(as.numeric(j$X == "KNA")),]
j[which(as.character(j$X == "KNA")),]
j[which(as.character(j$X == "KNA")),]
j
j$X
j[which(as.character(j$X == "KNA"))]
j[which(as.character(j$X == "KNA")),]
j[which(as.character(j$X=="KNA")),]
j[which(as.character(j$X="KNA")),]
j[which(as.character(j$x=="KNA")),]
j[which(as.characterj$X)=="KNA"),]
j[which(as.character(j$X)=="KNA"),]
j[which(as.character(j$X)=="KNA"),\]
j[which(as.character(j$X)=="KNA"),]
j[which(as.character(j$X)=="KNA")]
gdp
gdp[which(as.character(gdp$X=="KNA"))),]
gdp[which(as.character(gdp$X=="KNA")),]
gdp[which(as.character(gdp$X)=="KNA"),]
j
j
perfect
gdp[which(as.character(gdp$X)=="KNA"),]
setwd("~/Projects/datasciencecoursera/Getting and Cleaning Data/project/UCI HAR Dataset")
read.csv('train/y_train.txt')
read.csv('train/X_train.txt')
X_train.txt<-read.csv('train/X_train.txt')
X_train<-read.csv('train/X_train.txt')
X_test<-read('train/X_test.txt')
X_test<-read.csv('train/X_test.txt')
X_test<-read.csv('test/X_test.txt')
class(X_test)
X_test[1]
head(X_test)
X_test<-read.table(test/X_test.txt')
;
X_t<-read.table('test/X_test.txt')
X_t
class(X_t)
names(X_t)
x_t[1]
X_t[1]
names(X_t[1])
id<-c("id")
nrow(X_t)
id<-c()
for(i in 1:nrow(x_t)){
id<-c(id, as.numeric(i))
}
for(i in 1:nrow(X_t)){
id<-c(id, as.numeric(i))
}
id
x_test_id<-cbind(id, x_test)
x_test_id<-cbind(id, X_t)
x_test_id
df_x_test<-data.frame(x_test_id)
df_x_test
df_x_test[1]
nrow(X_train)
nrow(X_test)
source("run_analysis.R")
source("run_analysis.R")
getwd()
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
